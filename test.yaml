apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend
  name: backend
  namespace: backend
spec:
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      serviceAccountName: kkamji-eks-backend-pod-sa
      containers:
      - image: 376129852049.dkr.ecr.ap-northeast-2.amazonaws.com/kkamji-app-backend:latest
        name: backend
        resources:
          requests:
            cpu: "125m"
            memory: "512Mi"
          limits:
            cpu: "250m"
            memory: "1Gi"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: backend-hpa
  namespace: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: backend
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80  # 메모리 사용률을 80%로 설정
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      selectPolicy: Max
      policies:
      - type: Pods
        value: 2
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 60
      selectPolicy: Min
      policies:
      - type: Pods
        value: 2
        periodSeconds: 15
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: backend
  name: backend-service
  namespace: backend
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 80
  selector:
    app: backend
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-config
  namespace: database
data:
  my.cnf: |
    [mysqld]
    character-set-server=utf8mb4
    collation-server=utf8mb4_unicode_ci
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: database
spec:
  type: ClusterIP
  ports:
  - name: mysql-port
    port: 3306
    targetPort: 3306
  selector:
    app: mysql
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  namespace: database
data:
  init.sql: |
    -- weasel 데이터베이스를 생성하고 기본 문자 집합과 정렬 방식을 설정
    CREATE DATABASE IF NOT EXISTS kkamji_app CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
    
    -- 사용자의 모든 권한을 부여하고 권한을 적용
    GRANT ALL PRIVILEGES ON kkamji_app.* TO 'kkamji'@'%' WITH GRANT OPTION;
    FLUSH PRIVILEGES;
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: database
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      initContainers:
      - name: init-mysql
        image: busybox:1.28
        command: ['sh', '-c', 'rm -rf /var/lib/mysql/*']
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
      containers:
      - image: mysql:5.7
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-root-password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user-id
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user-password
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-database-name
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
        - name: mysql-storage
          mountPath: /var/lib/mysql
        - name: initdb
          mountPath: /docker-entrypoint-initdb.d
        - name: mysql-config-volume
          mountPath: /etc/mysql/conf.d/
      volumes:
      - name: mysql-storage
        persistentVolumeClaim:
          claimName: mysql-pvc
      - name: initdb
        configMap:
          name: mysql-initdb-config
      - name: mysql-config-volume
        configMap:
          name: mysql-config
---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
  namespace: database
type: Opaque
data:
  mysql-root-password: Tms5OG9p
  mysql-user-id: a2thbWpp # kkamji
  mysql-user-password: Tms5OG9p
  mysql-database-name: a2thbWppX2FwcA== # kkamji_app
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: database
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: gp3