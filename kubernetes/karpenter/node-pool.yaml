apiVersion: karpenter.sh/v1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["arm64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["on-demand"]
        # - key: karpenter.sh/capacity-type
        #   operator: In
        #   values: ["spot"]
        # - key: karpenter.k8s.aws/instance-category
        #   operator: In
        #   values: ["c", "m", "r"]
        - key: node.kubernetes.io/instance-type
          operator: In
          values: ["t4g.medium"]
      nodeClassRef:
        group: karpenter.k8s.aws
        kind: EC2NodeClass
        name: default
      expireAfter: 720h # 30 * 24h = 720h
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenEmptyOrUnderutilized
    consolidateAfter: 1m
---
apiVersion: karpenter.k8s.aws/v1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2023
  role: "KarpenterNodeRole-kkamji"
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "kkamji"
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "kkamji"
  amiSelectorTerms:
    # - id: ami-00c812cedaebebe05
    - id: ami-0cb3c3c2687bc0fbb
    # - id: ami-0a5ea0cf3491c9ec9
  kubelet:
    maxPods: 110

  # AL2 userData setting
  # userData: |
  #   #!/bin/bash
  #   set -o xtrace
  #   /etc/eks/bootstrap.sh kkamji \
  #     --use-max-pods false \
  #     --kubelet-extra-args '--max-pods=110'
